{
  "$defs": {
    "BossReward": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "boss_reward",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "contents",
        "type"
      ],
      "title": "BossReward",
      "type": "object"
    },
    "Chest": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "chest",
          "title": "Type",
          "type": "string"
        },
        "zmb_file_path": {
          "description": "File path to the zmb the chest is on",
          "minLength": 1,
          "title": "Zmb File Path",
          "type": "string"
        },
        "zmb_mapobject_index": {
          "description": "Index of the chest in the defined zmb file",
          "title": "Zmb Mapobject Index",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "contents",
        "type",
        "zmb_file_path",
        "zmb_mapobject_index"
      ],
      "title": "Chest",
      "type": "object"
    },
    "DigSpot": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "dig_spot",
          "title": "Type",
          "type": "string"
        },
        "zmb_file_path": {
          "description": "File path to the zmb the chest is on",
          "minLength": 1,
          "title": "Zmb File Path",
          "type": "string"
        },
        "zmb_actor_index": {
          "description": "Index of the chest in the NPCA section of the zmb file",
          "title": "Zmb Actor Index",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "contents",
        "type",
        "zmb_file_path",
        "zmb_actor_index"
      ],
      "title": "DigSpot",
      "type": "object"
    },
    "Enemy": {
      "properties": {
        "name": {
          "description": "The name of the referenced `enemy` in the .logic file.",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "type": {
          "description": "The type of the enemy. Should map to an entry in `shuffler/enemies.json`.",
          "minLength": 1,
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "title": "Enemy",
      "type": "object"
    },
    "Event": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "event",
          "title": "Type",
          "type": "string"
        },
        "bmg_file_path": {
          "description": "File path to the bmg the instruction is on",
          "minLength": 1,
          "title": "Bmg File Path",
          "type": "string"
        },
        "bmg_instruction_index": {
          "description": "Index of the instruction in the defined bmg file",
          "title": "Bmg Instruction Index",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "contents",
        "type",
        "bmg_file_path",
        "bmg_instruction_index"
      ],
      "title": "Event",
      "type": "object"
    },
    "Exit": {
      "properties": {
        "name": {
          "description": "The name of this exit",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "entrance": {
          "description": "The `entrance` or `door` where this exit leads.",
          "minLength": 1,
          "title": "Entrance",
          "type": "string"
        }
      },
      "required": [
        "name",
        "entrance"
      ],
      "title": "Exit",
      "type": "object"
    },
    "Freestanding": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "freestanding",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "contents",
        "type"
      ],
      "title": "Freestanding",
      "type": "object"
    },
    "Item": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "states": {
          "default": [],
          "description": "State(s) that should be gained upon obtaining this item.",
          "items": {
            "type": "string"
          },
          "title": "States",
          "type": "array",
          "uniqueItems": true
        }
      },
      "required": [
        "name"
      ],
      "title": "Item",
      "type": "object"
    },
    "Mail": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "mail",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "contents",
        "type"
      ],
      "title": "Mail",
      "type": "object"
    },
    "MinigameRewardChest": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "minigame_reward_chest",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "contents",
        "type"
      ],
      "title": "MinigameRewardChest",
      "type": "object"
    },
    "OnEnemy": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "on_enemy",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "contents",
        "type"
      ],
      "title": "OnEnemy",
      "type": "object"
    },
    "Room": {
      "additionalProperties": true,
      "properties": {
        "name": {
          "description": "The name of the room",
          "minLength": 1,
          "title": "Name",
          "type": "string"
        },
        "chests": {
          "default": [],
          "description": "Item checks that can be made in this room",
          "items": {
            "discriminator": {
              "mapping": {
                "boss_reward": "#/$defs/BossReward",
                "chest": "#/$defs/Chest",
                "dig_spot": "#/$defs/DigSpot",
                "event": "#/$defs/Event",
                "freestanding": "#/$defs/Freestanding",
                "mail": "#/$defs/Mail",
                "minigame_reward_chest": "#/$defs/MinigameRewardChest",
                "on_enemy": "#/$defs/OnEnemy",
                "salvage_treasure": "#/$defs/SalvageTreasure",
                "shop": "#/$defs/Shop",
                "spirit_upgrade": "#/$defs/SpiritUpgrade",
                "tree": "#/$defs/Tree"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/Chest"
              },
              {
                "$ref": "#/$defs/Event"
              },
              {
                "$ref": "#/$defs/Shop"
              },
              {
                "$ref": "#/$defs/Tree"
              },
              {
                "$ref": "#/$defs/Freestanding"
              },
              {
                "$ref": "#/$defs/OnEnemy"
              },
              {
                "$ref": "#/$defs/SalvageTreasure"
              },
              {
                "$ref": "#/$defs/DigSpot"
              },
              {
                "$ref": "#/$defs/MinigameRewardChest"
              },
              {
                "$ref": "#/$defs/Mail"
              },
              {
                "$ref": "#/$defs/BossReward"
              },
              {
                "$ref": "#/$defs/SpiritUpgrade"
              }
            ]
          },
          "title": "Chests",
          "type": "array"
        },
        "exits": {
          "default": [],
          "description": "All `exits` in this room that lead to an `entrance` in another room",
          "items": {
            "$ref": "#/$defs/Exit"
          },
          "title": "Exits",
          "type": "array"
        },
        "enemies": {
          "default": [],
          "description": "All enemies in this room",
          "items": {
            "$ref": "#/$defs/Enemy"
          },
          "title": "Enemies",
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "title": "Room",
      "type": "object"
    },
    "SalvageTreasure": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "salvage_treasure",
          "title": "Type",
          "type": "string"
        },
        "zmb_file_path": {
          "description": "File path to the zmb the chest is on",
          "minLength": 1,
          "title": "Zmb File Path",
          "type": "string"
        },
        "zmb_actor_index": {
          "description": "Index of the chest in the NPCA section of the zmb file",
          "title": "Zmb Actor Index",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "contents",
        "type",
        "zmb_file_path",
        "zmb_actor_index"
      ],
      "title": "SalvageTreasure",
      "type": "object"
    },
    "Shop": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "shop",
          "title": "Type",
          "type": "string"
        },
        "overlay": {
          "description": "The code overlay this shop item is on",
          "title": "Overlay",
          "type": "integer"
        },
        "overlay_offset": {
          "description": "Hex offset from overlay to the shop item",
          "minLength": 1,
          "title": "Overlay Offset",
          "type": "string"
        }
      },
      "required": [
        "name",
        "contents",
        "type",
        "overlay",
        "overlay_offset"
      ],
      "title": "Shop",
      "type": "object"
    },
    "SpiritUpgrade": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "spirit_upgrade",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "name",
        "contents",
        "type"
      ],
      "title": "SpiritUpgrade",
      "type": "object"
    },
    "Tree": {
      "properties": {
        "name": {
          "description": "The name of the item check",
          "title": "Name",
          "type": "string"
        },
        "contents": {
          "$ref": "#/$defs/Item",
          "description": "The item that this check contains"
        },
        "display_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Human-readable name used in spoiler logs, etc.",
          "title": "Display Name"
        },
        "type": {
          "const": "tree",
          "title": "Type",
          "type": "string"
        },
        "zmb_file_path": {
          "description": "File path to the zmb the tree is on",
          "minLength": 1,
          "title": "Zmb File Path",
          "type": "string"
        },
        "zmb_mapobject_index": {
          "description": "Index of the tree object in the defined zmb file",
          "title": "Zmb Mapobject Index",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "contents",
        "type",
        "zmb_file_path",
        "zmb_mapobject_index"
      ],
      "title": "Tree",
      "type": "object"
    }
  },
  "properties": {
    "name": {
      "description": "The name of the area",
      "minLength": 1,
      "title": "Name",
      "type": "string"
    },
    "rooms": {
      "description": "All of the rooms inside this area",
      "items": {
        "$ref": "#/$defs/Room"
      },
      "minItems": 1,
      "title": "Rooms",
      "type": "array"
    }
  },
  "required": [
    "name",
    "rooms"
  ],
  "title": "Area",
  "type": "object"
}
